//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AutocreatedRegHandler1548768767986 implements Auth.RegistrationHandler{
    global boolean canCreateUser(Auth.UserData data) {
        //TODO: Check whether we want to allow creation of a user with this data
        //Set<String> s = new Set<String>{'usernamea', 'usernameb', 'usernamec'};
        //if(s.contains(data.username)) {
        //return true;
        //}
        return false;
    }
    
    global User createUser(Id portalId, Auth.UserData data){
        system.debug('data '+data );
        List<User> usuarios = [SELECT Id FROM User WHERE FederationIdentifier =: data.username AND IsActive = true];
        
        if (usuarios.size()==1){
           
            system.debug('resultado->'+usuarios[0]);
            return usuarios[0];
        }
        return null;
    }
    
    global void updateUser(Id userId, Id portalId, Auth.UserData data){
        system.debug('data '+data );
      
        User u = new User(id=userId);
        u.AccessToken_Nectia__c=null;
        u.email = data.email;
        update(u);
        
        
    }
}